{"version":3,"file":"osana.client.js","mappings":"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","sources":["webpack://osana/./src/lib/client/element.ts","webpack://osana/./src/lib/client/navigator.ts","webpack://osana/webpack/bootstrap","webpack://osana/./src/lib/client/location.ts","webpack://osana/./src/lib/client/storage.ts","webpack://osana/./src/lib/client/window.ts","webpack://osana/./src/lib/client/message.ts","webpack://osana/./src/lib/client/fetch.ts","webpack://osana/./src/lib/client/history.ts","webpack://osana/./src/lib/client/xmlhttp.ts","webpack://osana/./src/lib/client/request.ts","webpack://osana/./src/lib/client/beacon.ts","webpack://osana/./src/lib/client/websocket.ts","webpack://osana/./src/lib/client/eval.ts","webpack://osana/./src/lib/client/worker.ts","webpack://osana/./src/lib/client/open.ts","webpack://osana/./src/lib/client/index.ts"],"sourcesContent":["const rewriteURL = self.__osana$bundle.rewrite.url;\nconst rewriteCSS = self.__osana$bundle.rewrite.css;\nconst rewriteJS = self.__osana$bundle.rewrite.js;\nconst rewriteHTML = self.__osana$bundle.rewrite.html;\nconst rewriteSrcset = self.__osana$bundle.rewrite.srcset;\nconst attributes = {\n    \"href\": [HTMLAnchorElement, HTMLLinkElement, HTMLAreaElement, HTMLBaseElement],\n    \"src\": [HTMLAudioElement, HTMLEmbedElement, HTMLIFrameElement, HTMLImageElement, HTMLInputElement, HTMLScriptElement, HTMLSourceElement, HTMLTrackElement, HTMLVideoElement],\n    \"srcset\": [HTMLImageElement, HTMLSourceElement],\n    \"action\": [HTMLFormElement]\n};\n// Element.seAttribute\nconst setterApply = Object.getOwnPropertyDescriptor(Element.prototype, \"setAttribute\").value;\nElement.prototype.setAttribute = function (name, value) {\n    if (attributes[name]) {\n        for (let i in attributes[name]) {\n            if (this instanceof attributes[name][i]) {\n                setterApply.apply(this, [name, rewriteURL(value)]);\n                return;\n            }\n        }\n    }\n    if (name === undefined || value === undefined)\n        throw new TypeError(`Failed to execute 'setAttribute' on 'Element': 2 arguments required, but only ${!name && !value ? 0 : 1} present.`);\n    setterApply.apply(this, [name, value]);\n};\n// Element[attribute]\nObject.keys(attributes).forEach((attribute) => {\n    attributes[attribute].forEach((element) => {\n        try {\n            // URL based attributes\n            if ([\"href\", \"src\", \"srcset\", \"action\"].includes(attribute)) {\n                const { set, get } = Object.getOwnPropertyDescriptor(element.prototype, attribute);\n                Object.defineProperty(element.prototype, attribute, {\n                    set(value) {\n                        return set.call(this, [rewriteURL(value)]);\n                    }\n                });\n            }\n        }\n        catch (_a) { }\n    });\n});\n// Element.innerHTML\nconst { set } = Object.getOwnPropertyDescriptor(Element.prototype, \"innerHTML\");\nObject.defineProperty(Element.prototype, \"innerHTML\", {\n    set(value) {\n        if (this instanceof HTMLScriptElement) {\n            return set.call(this, rewriteJS(value));\n        }\n        else if (this instanceof HTMLStyleElement) {\n            return set.call(this, rewriteCSS(value));\n        }\n        return set.call(this, rewriteHTML(value));\n    }\n});\n","Object.defineProperty(navigator, \"serviceWorker\", {});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const config = self.__osana$config;\nexport function getLocation(scope) {\n    try {\n        let fakeLocation = new URL(config.codec.decode(location.pathname.replace(new RegExp(`^${config.prefix}`), \"\")));\n        if (scope) {\n            fakeLocation.href = new URL(config.codec.decode(scope.location.pathname.replace(new RegExp(`^${config.prefix}`), \"\")));\n        }\n        fakeLocation.ancestorOrigins = { length: 0 };\n        fakeLocation.assign = (url) => location.assign(config.prefix + config.codec.encode(url));\n        fakeLocation.reload = () => location.reload();\n        fakeLocation.replace = (url) => location.replace(config.prefix + config.codec.encode(url));\n        fakeLocation.toString = () => fakeLocation.href;\n        return fakeLocation;\n    }\n    catch (_a) {\n        return {};\n    }\n}\nwindow.Location = class {\n};\nexport class LocationProxy {\n    constructor(scope) {\n        return new Proxy(new Location(), {\n            get(target, prop, receiver) {\n                let fakeLocation = getLocation(scope);\n                return fakeLocation[prop];\n            },\n            set(target, prop, value) {\n                let fakeLocation = getLocation(scope);\n                fakeLocation[prop] = value;\n                location.pathname = config.prefix + config.codec.encode(fakeLocation.href);\n                return fakeLocation[prop];\n            }\n        });\n    }\n}\nexport default new LocationProxy();\n","import LocationProxy from \"./location\";\nfunction createStorageProxy(scope) {\n    return new Proxy({\n        getItem(key) {\n            return scope.getItem(`${key}@${LocationProxy.host}`);\n        },\n        setItem(key, value) {\n            scope.setItem(`${key}@${LocationProxy.host}`, value);\n        },\n        removeItem(key) {\n            scope.removeItem(`${key}@${LocationProxy.host}`);\n        },\n        clear() {\n            Object.keys(scope).forEach((key) => {\n                if (new RegExp(`@${LocationProxy.host}$`).test(key)) {\n                    this.removeItem(key.replace(new RegExp(`@${LocationProxy.host}$`), \"\"));\n                }\n            });\n        }\n    }, {\n        get(target, prop, receiver) {\n            if (prop === \"length\") {\n                return Object.keys(scope).filter((key) => new RegExp(`@${LocationProxy.host}$`).test(key)).length;\n            }\n            else if ([\"getItem\", \"setItem\", \"removeItem\", \"clear\"].includes(prop)) {\n                return target[prop];\n            }\n            else {\n                return target.getItem(prop);\n            }\n        },\n        set(target, prop, value) {\n            return target.setItem(prop, value);\n        }\n    });\n}\nconst idbopen = indexedDB.open;\nindexedDB.open = (name, version) => {\n    return idbopen.call(indexedDB, `${name}@${LocationProxy.host}`, version);\n};\nif (window.hasOwnProperty(\"openDatabase\")) {\n    const odb = openDatabase;\n    openDatabase = (name, version, displayName, maxSize) => {\n        return odb(`${name}@${LocationProxy.host}`, version, displayName, maxSize);\n    };\n}\nwindow.__localStorage = createStorageProxy(localStorage);\nwindow.__sessionStorage = createStorageProxy(sessionStorage);\n","import { LocationProxy } from \"./location\";\nexport class WindowProxy {\n    constructor(scope) {\n        return new Proxy(scope, {\n            get(target, prop, receiver) {\n                if (prop === \"location\") {\n                    return new LocationProxy(target);\n                }\n                else if ([\"parent\", \"top\"].includes(prop)) {\n                    if (window === window[prop])\n                        return window.__window;\n                    else\n                        return new WindowProxy(target[prop]);\n                }\n                else if ([\"window\", \"self\", \"globalThis\"].includes(prop)) {\n                    return new WindowProxy(target);\n                }\n                else if (prop === \"localStorage\") {\n                    return window.__localStorage;\n                }\n                else if (prop === \"sessionStorage\") {\n                    return window.__sessionStorage;\n                }\n                return target[prop];\n            },\n            set(target, prop, value) {\n                return Reflect.set(scope, prop, value);\n            }\n        });\n    }\n}\nexport default new WindowProxy(window);\n","import { WindowProxy } from \"./window\";\nexport default class MessageProxy {\n    constructor(scope) {\n        return new Proxy(scope.addEventListener, {\n            apply(target, thisArg, args) {\n                if (args[0] && args[1]) {\n                    if (args[0] === \"message\") {\n                        args[1] = new Proxy(args[1], {\n                            apply(target, thisArg, args) {\n                                args[0] = new Proxy(args[0], {\n                                    get(target, prop, receiver) {\n                                        if (prop === \"origin\")\n                                            return __location.origin;\n                                        if (prop === \"path\")\n                                            target[prop].map((win) => new WindowProxy(win));\n                                        if (prop === \"currentTarget\")\n                                            return new WindowProxy(target[prop]);\n                                        if (prop === \"source\")\n                                            return new WindowProxy(target[prop]);\n                                        if (prop === \"srcElement\")\n                                            return new WindowProxy(target[prop]);\n                                        if (prop === \"target\")\n                                            return new WindowProxy(target[prop]);\n                                        return target[prop];\n                                    }\n                                });\n                                return Reflect.apply(target, thisArg, args);\n                            }\n                        });\n                    }\n                }\n                return Reflect.apply(target, thisArg, args);\n            }\n        });\n    }\n}\n","const rewriteURL = self.__osana$bundle.rewrite.url;\nexport default new Proxy(fetch, {\n    apply(target, thisArg, args) {\n        if (args[0])\n            args[0] = rewriteURL(args[0]);\n        return Reflect.apply(target, thisArg, args);\n    }\n});\n","const rewriteURL = self.__osana$bundle.rewrite.url;\nconst config = self.__osana$config;\nconst pushState = new Proxy(window.history.pushState, {\n    apply(target, thisArg, args) {\n        if (new RegExp(`^${config.prefix}`).test(args[2]))\n            return;\n        args[2] = rewriteURL(args[2]);\n        Reflect.apply(target, thisArg, args);\n    }\n});\nconst replaceState = new Proxy(window.history.replaceState, {\n    apply(target, thisArg, args) {\n        if (new RegExp(`^${config.prefix}`).test(args[2]))\n            return;\n        args[2] = rewriteURL(args[2]);\n        Reflect.apply(target, thisArg, args);\n    }\n});\nexport { pushState, replaceState };\n","const rewriteURL = self.__osana$bundle.rewrite.url;\nconst XMLOpen = window.XMLHttpRequest.prototype.open;\nexport default function (...args) {\n    if (args[1])\n        args[1] = rewriteURL(args[1]);\n    return XMLOpen.call(this, ...args);\n}\n;\n","const rewriteURL = self.__osana$bundle.rewrite.url;\nconst config = self.__osana$config;\nexport default new Proxy(Request, {\n    construct(target, args) {\n        if (args[0])\n            args[0] = rewriteURL(args[0]);\n        return new Proxy(Reflect.construct(target, args), {\n            get(target, prop, receiver) {\n                if (prop === \"url\") {\n                    let fakeLocation = new URL(config.codec.decode(location.pathname.replace(new RegExp(`^${config.prefix}`), \"\")));\n                    return fakeLocation.href;\n                }\n                return target[prop];\n            }\n        });\n    }\n});\n","const rewriteURL = self.__osana$bundle.rewrite.url;\nexport default new Proxy(navigator.sendBeacon, {\n    apply(target, thisArg, args) {\n        if (args[0])\n            args[0] = rewriteURL(args[0]);\n        return Reflect.apply(target, thisArg, args);\n    }\n});\n","import locationProxy from \"./location\";\nconst encodeProtocol = self.__osana$bundle.rewrite.protocol;\nconst v4 = self.__osana$bundle.uuid;\nconst config = self.__osana$config;\nconst websockets = new Map();\nexport default new Proxy(WebSocket, {\n    construct(target, args, newTarget) {\n        if (args[0]) {\n            const url = new URL(args[0]);\n            const id = v4();\n            websockets.set(id, url.toString());\n            const request = {\n                remote: {\n                    host: url.hostname,\n                    port: url.port || (url.protocol === \"wss:\" ? \"443\" : \"80\"),\n                    path: url.pathname + url.search,\n                    protocol: url.protocol\n                },\n                headers: {\n                    Host: url.host,\n                    Origin: locationProxy.origin,\n                    Pragma: \"no-cache\",\n                    \"Cache-Control\": \"no-cache\",\n                    Upgrade: \"websocket\",\n                    Connection: \"Upgrade\"\n                },\n                forward_headers: [\"accept-encoding\", \"accept-language\", \"sec-websocket-extensions\", \"sec-websocket-key\", \"sec-websocket-version\"]\n            };\n            const bareURL = new URL(config.bare);\n            return Reflect.construct(target, [location.protocol.replace(\"http\", \"ws\") + \"//\" + (bareURL.host + bareURL.pathname) + `v1/?${id}`, [\"bare\", encodeProtocol(JSON.stringify(request))]]);\n        }\n        return Reflect.construct(target, args, newTarget);\n    }\n});\nconst websocketURL = Object.getOwnPropertyDescriptor(WebSocket.prototype, \"url\");\nObject.defineProperty(WebSocket.prototype, \"url\", {\n    get() {\n        const url = websocketURL.get.call(this);\n        const id = new URL(url).search.substring(1);\n        return websockets.get(id);\n    }\n});\n","const rewriteJS = self.__osana$bundle.rewrite.js;\nexport default new Proxy(eval, {\n    apply(target, thisArg, argumentsList) {\n        if (argumentsList[0])\n            argumentsList[0] = rewriteJS(argumentsList[0]);\n        return Reflect.apply(target, thisArg, argumentsList);\n    }\n});\n","const rewriteURL = self.__osana$bundle.rewrite.url;\nexport default new Proxy(window.Worker, {\n    construct(target, args, newTarget) {\n        if (args[0])\n            args[0] = rewriteURL(args[0]);\n        return Reflect.construct(target, args, newTarget);\n    }\n});\n","const rewriteURL = self.__osana$bundle.rewrite.url;\nexport default new Proxy(window.open, {\n    apply(target, thisArg, args) {\n        if (args[0] && args[0] !== \"about:blank\")\n            args[0] = rewriteURL(args[0]);\n        Reflect.apply(target, thisArg, args);\n    }\n});\n","import \"./element\";\nimport \"./storage\";\nimport \"./navigator\";\nimport MessageProxy from \"./message\";\nimport FetchProxy from \"./fetch\";\nimport * as History from \"./history\";\nimport LocationProxy from \"./location\";\nimport WindowProxy from \"./window\";\nimport XMLHttpRequestProxy from \"./xmlhttp\";\nimport RequestProxy from \"./request\";\nimport BeaconProxy from \"./beacon\";\nimport WebSocketProxy from \"./websocket\";\nimport EvalProxy from \"./eval\";\nimport WorkerProxy from \"./worker\";\nimport OpenProxy from \"./open\";\nwindow.fetch = FetchProxy;\nwindow.Request = RequestProxy;\nwindow.history.pushState = History.pushState;\nwindow.history.replaceState = History.replaceState;\nwindow.__parent = WindowProxy.parent;\nwindow.__top = WindowProxy.top;\nwindow.__window = WindowProxy;\nwindow.__location = LocationProxy;\nwindow.__self = WindowProxy;\nwindow.XMLHttpRequest.prototype.open = XMLHttpRequestProxy;\nnavigator.sendBeacon = BeaconProxy;\nwindow.WebSocket = WebSocketProxy;\nwindow.eval = EvalProxy;\nwindow.Worker = WorkerProxy;\nwindow.open = OpenProxy;\nwindow.addEventListener = new MessageProxy(window);\nwindow.Worker.prototype.addEventListener = new MessageProxy(window.Worker.prototype);\n"],"names":["rewriteURL","self","__osana$bundle","rewrite","url","rewriteCSS","css","rewriteJS","js","rewriteHTML","html","attributes","srcset","HTMLAnchorElement","HTMLLinkElement","HTMLAreaElement","HTMLBaseElement","HTMLAudioElement","HTMLEmbedElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLScriptElement","HTMLSourceElement","HTMLTrackElement","HTMLVideoElement","HTMLFormElement","setterApply","Object","getOwnPropertyDescriptor","Element","prototype","value","setAttribute","name","i","this","apply","undefined","TypeError","keys","forEach","attribute","element","includes","set","get","defineProperty","call","_a","HTMLStyleElement","navigator","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","config","__osana$config","getLocation","scope","fakeLocation","URL","codec","decode","location","pathname","replace","RegExp","prefix","href","ancestorOrigins","length","assign","encode","reload","toString","window","Location","LocationProxy","constructor","Proxy","target","prop","receiver","createStorageProxy","getItem","key","setItem","removeItem","clear","test","filter","idbopen","indexedDB","open","version","hasOwnProperty","odb","openDatabase","displayName","maxSize","__localStorage","localStorage","__sessionStorage","sessionStorage","WindowProxy","__window","Reflect","MessageProxy","addEventListener","thisArg","args","__location","origin","map","win","fetch","pushState","history","replaceState","XMLOpen","XMLHttpRequest","Request","construct","sendBeacon","encodeProtocol","protocol","v4","uuid","websockets","Map","WebSocket","newTarget","id","request","remote","host","hostname","port","path","search","headers","Host","Origin","Pragma","Upgrade","Connection","forward_headers","bareURL","bare","JSON","stringify","websocketURL","substring","eval","argumentsList","Worker","__parent","__top","__self"],"sourceRoot":""}